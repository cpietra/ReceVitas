// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReceVitas.Models;

namespace ReceVitas.Migrations
{
    [DbContext(typeof(RecetasContext))]
    [Migration("20180909233816_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ReceVitas.Models.Medicamentos", b =>
                {
                    b.Property<int>("id_medicamento")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("acargoafil");

                    b.Property<double>("acargoos");

                    b.Property<string>("atc");

                    b.Property<string>("generico");

                    b.Property<double>("grupoter");

                    b.Property<string>("laboratorio");

                    b.Property<string>("nombre");

                    b.Property<string>("obser");

                    b.Property<double>("pr");

                    b.Property<string>("presentacion");

                    b.Property<double>("pvp");

                    b.Property<double>("registro");

                    b.HasKey("id_medicamento");

                    b.ToTable("medicamentos");
                });

            modelBuilder.Entity("ReceVitas.Models.Medicos", b =>
                {
                    b.Property<int>("id_medico")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("activo");

                    b.Property<string>("apellido");

                    b.Property<string>("compania_m");

                    b.Property<string>("direccion");

                    b.Property<string>("dni");

                    b.Property<string>("localidad");

                    b.Property<string>("m_n");

                    b.Property<string>("m_p");

                    b.Property<string>("movil");

                    b.Property<string>("nombre");

                    b.Property<string>("plan");

                    b.Property<string>("telefono");

                    b.HasKey("id_medico");

                    b.ToTable("medicos");
                });

            modelBuilder.Entity("ReceVitas.Models.Padron", b =>
                {
                    b.Property<int>("id_Padron")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("categoria");

                    b.Property<string>("cobrador");

                    b.Property<string>("ecivil");

                    b.Property<string>("email");

                    b.Property<DateTime>("f_alta_grupo");

                    b.Property<DateTime>("f_antiguedad1");

                    b.Property<DateTime>("f_baja");

                    b.Property<DateTime>("f_egreso");

                    b.Property<DateTime>("f_ingreso");

                    b.Property<DateTime>("f_nacimiento");

                    b.Property<string>("motivo_baja_agrupado_grupo");

                    b.Property<string>("motivo_baja_grupo");

                    b.Property<string>("motivo_baja_miembro");

                    b.Property<string>("motivo_baja_miembro_agrupado");

                    b.Property<string>("movil");

                    b.Property<string>("nacionalidad");

                    b.Property<string>("nombre");

                    b.Property<string>("num_doc");

                    b.Property<int>("numero");

                    b.Property<int>("orden");

                    b.Property<bool>("paciente_cronico");

                    b.Property<string>("parentesco");

                    b.Property<string>("plan");

                    b.Property<string>("prepaga_anterior");

                    b.Property<string>("prepaga_proxima");

                    b.Property<string>("presento");

                    b.Property<string>("promotor");

                    b.Property<string>("sexo");

                    b.Property<string>("telefono");

                    b.Property<string>("tipo_doc");

                    b.Property<string>("tipo_grupo");

                    b.Property<string>("vive_calle");

                    b.Property<string>("vive_cod_postal");

                    b.Property<string>("vive_depto");

                    b.Property<string>("vive_localidad");

                    b.Property<string>("vive_localidad_texto");

                    b.Property<string>("vive_numero");

                    b.Property<string>("vive_partido");

                    b.Property<string>("vive_piso");

                    b.Property<string>("vive_provincia");

                    b.Property<string>("volveria");

                    b.Property<string>("zona");

                    b.HasKey("id_Padron");

                    b.ToTable("padron");
                });

            modelBuilder.Entity("ReceVitas.Models.Patologias", b =>
                {
                    b.Property<int>("id_pat")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("activo");

                    b.Property<string>("codigo");

                    b.Property<string>("descripcion");

                    b.HasKey("id_pat");

                    b.ToTable("patologias");
                });

            modelBuilder.Entity("ReceVitas.Models.Recetas_Registros", b =>
                {
                    b.Property<int>("id_receta")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("activo");

                    b.Property<int>("cantidad");

                    b.Property<int>("id_medicamento");

                    b.Property<int>("id_medico");

                    b.Property<int>("id_pat");

                    b.Property<int>("numero_afiliado");

                    b.HasKey("id_receta");

                    b.ToTable("recetas_registros");
                });
#pragma warning restore 612, 618
        }
    }
}
